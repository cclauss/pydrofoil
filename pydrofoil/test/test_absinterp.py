from pydrofoil.absinterp import analyze, BOOL, UNBOUNDED, TRUE, FALSE, Range
from pydrofoil.absinterp import optimize_with_range_info
from pydrofoil.test.test_ir import compare, FakeCodeGen

from pydrofoil.types import *
from pydrofoil.ir import *

fakecodegen = FakeCodeGen()

def test_analyze_stageoa():
    zia = Argument('zia', SmallFixedBitVector(64))
    zaddress = Argument('zaddress', SmallFixedBitVector(52))
    mi = Argument("mi", MachineInt())
    block2 = Block()
    block3 = Block()
    block4 = Block()
    block5 = Block()
    block6 = Block()
    block7 = Block()
    block8 = Block()
    block9 = Block()
    block10 = Block()
    block11 = Block()
    block12 = Block()
    block13 = Block()
    i24 = block2.emit(Operation, '@lteq', [MachineIntConstant(0), mi], Bool(), '`7 9343:23-9343:35', 'zz435')
    block2.next = ConditionalGoto(i24, block3, block13, '`7 9343:23-9343:51')
    i26 = block3.emit(Operation, '@lteq', [mi, MachineIntConstant(51)], Bool(), '`7 9343:38-9343:51', 'zz436')
    block3.next = ConditionalGoto(i26, block4, block13, '`7 9342:4-9346:14')
    i29 = block4.emit(Operation, '@sub_i_i_must_fit', [mi, MachineIntConstant(1)], MachineInt(), '`7 9344:22-9344:38', 'zz431')
    i30 = block4.emit(Operation, '@lteq', [MachineIntConstant(0), i29], Bool(), '`7 9344:22-9344:38', 'zz423')
    block4.next = ConditionalGoto(i30, block5, block12, '`7 9342:4-9346:14')
    i35 = block5.emit(Operation, '@sub_i_i_wrapped_res', [MachineIntConstant(51), mi], Int(), '`4 166:45-166:48', 'zz418')
    i36 = block5.emit(Operation, '@add_o_i_wrapped_res', [i35, MachineIntConstant(1)], Int(), '`4 166:45-166:50', 'zz417')
    i38 = block5.emit(Operation, '@gteq', [i36, IntConstant(52)], Bool(), '`2 336:5-336:11', 'zz40')
    block5.next = ConditionalGoto(i38, block6, block11, '`2 336:2-341:3')
    i40 = block6.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0xfffffffffffff, SmallFixedBitVector(52)), MachineIntConstant(52), mi], SmallFixedBitVector(52), '`2 337:4-337:35', 'return')
    block6.next = Goto(block7, None)
    i41 = block7.emit_phi([block11, block6], [None, i40], SmallFixedBitVector(52))
    i42 = block7.emit(Operation, '@and_vec_bv_bv', [zaddress, i41], SmallFixedBitVector(52), '`4 166:27-166:51', 'zz414')
    i43 = block7.emit(Operation, '@shiftr_bv_i', [i42, MachineIntConstant(52), mi], SmallFixedBitVector(52), '`4 166:11-166:55', 'zz40')
    i44 = block7.emit(Operation, '@add_i_i_wrapped_res', [i29, MachineIntConstant(1)], Int(), '`4 167:46-167:53', 'zz411')
    i46 = block7.emit(Operation, '@gteq', [i44, IntConstant(64)], Bool(), '`2 336:5-336:11', 'zz40')
    block7.next = ConditionalGoto(i46, block8, block10, '`2 336:2-341:3')
    block8.next = Goto(block9, None)
    i48 = block9.emit_phi([block10, block8], [None, SmallBitVectorConstant(r_uint(0xffffffffffffffff), SmallFixedBitVector(64))], SmallFixedBitVector(64))
    i49 = block9.emit(Operation, '@and_vec_bv_bv', [zia, i48], SmallFixedBitVector(64), '`4 167:27-167:54', 'zz48')
    i51 = block9.emit(Operation, '@add_i_i_must_fit', [i29, MachineIntConstant(1)], MachineInt(), '`4 168:31-168:42', 'zz45')
    i52 = block9.emit(Operation, '@shiftl_bv_i', [i43, MachineIntConstant(52), i51], SmallFixedBitVector(52), '`4 168:2-168:43', 'zz42')
    i54 = block9.emit(Operation, '@truncate_bv_i', [i49, MachineIntConstant(52)], SmallFixedBitVector(52), '`4 80:17-80:31', 'return')
    i55 = block9.emit(Operation, '@or_vec_bv_bv', [i52, i54], SmallFixedBitVector(52), '`4 168:2-168:58', 'return')
    block9.next = Return(i55, None)
    i58 = block10.emit(Operation, 'int_to_int64', [i44], MachineInt(), None, None)
    i59 = block10.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0x1, SmallFixedBitVector(64)), MachineIntConstant(64), i58], SmallFixedBitVector(64), '`2 340:28-340:50', 'zz44')
    i60 = block10.emit(Operation, '@sub_bits_bv_bv', [i59, SmallBitVectorConstant(0x1, SmallFixedBitVector(64)), MachineIntConstant(64)], SmallFixedBitVector(64), '`2 340:19-340:56', 'zz43')
    i48.prevvalues[0] = i60
    block10.next = Goto(block9, None)
    i62 = block11.emit(Operation, 'int_to_int64', [i36], MachineInt(), None, None)
    i63 = block11.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0x1, SmallFixedBitVector(52)), MachineIntConstant(52), i62], SmallFixedBitVector(52), '`2 340:28-340:50', 'zz44')
    i64 = block11.emit(Operation, '@sub_bits_bv_bv', [i63, SmallBitVectorConstant(0x1, SmallFixedBitVector(52)), MachineIntConstant(52)], SmallFixedBitVector(52), '`2 340:19-340:56', 'zz43')
    i65 = block11.emit(Operation, '@shiftl_bv_i', [i64, MachineIntConstant(52), mi], SmallFixedBitVector(52), '`2 340:4-340:60', 'return')
    i41.prevvalues[0] = i65
    block11.next = Goto(block7, None)
    block12.next = Raise(StringConstant('src/v8_base.sail:9344.39-9344.40'), None)
    block13.next = Raise(StringConstant('src/v8_base.sail:9343.53-9343.54'), None)
    graph = Graph('zStageOA', [zia, zaddress, mi], block2)
    values = analyze(graph)
    assert values[block2][i24] == BOOL
    assert values[block3][mi] == Range(0, None)
    assert values[block4][mi] == Range(0, 51)
    assert values[block4][i29] == Range(-1, 50)
    assert values[block5][i29] == Range(0, 50)
    assert values[block5][i35] == Range(0, 51)
    assert values[block5][i36] == Range(1, 52)
    assert values[block7][i44] == Range(1, 51)
    assert values[block7][i46] == FALSE
    assert block8 not in values
    assert values[block9][i51] == Range(1, 51)

    res = optimize_with_range_info(graph, fakecodegen)
    light_simplify(graph, fakecodegen)
    assert res
    compare(graph, """
zia = Argument('zia', SmallFixedBitVector(64))
zaddress = Argument('zaddress', SmallFixedBitVector(52))
mi = Argument('mi', MachineInt())
block0 = Block()
block1 = Block()
block2 = Block()
block3 = Block()
block4 = Block()
block5 = Block()
block6 = Block()
block7 = Block()
block8 = Block()
i3 = block0.emit(Operation, '@lteq', [MachineIntConstant(0), mi], Bool(), '`7 9343:23-9343:35', 'zz435')
block0.next = ConditionalGoto(i3, block1, block8, '`7 9343:23-9343:51')
i4 = block1.emit(Operation, '@lteq', [mi, MachineIntConstant(51)], Bool(), '`7 9343:38-9343:51', 'zz436')
block1.next = ConditionalGoto(i4, block2, block8, '`7 9342:4-9346:14')
i5 = block2.emit(Operation, '@sub_i_i_must_fit', [mi, MachineIntConstant(1)], MachineInt(), '`7 9344:22-9344:38', 'zz431')
i6 = block2.emit(Operation, '@lteq', [MachineIntConstant(0), i5], Bool(), '`7 9344:22-9344:38', 'zz423')
block2.next = ConditionalGoto(i6, block3, block7, '`7 9342:4-9346:14')
i7 = block3.emit(Operation, '@sub_i_i_must_fit', [MachineIntConstant(51), mi], MachineInt(), '`4 166:45-166:48', 'zz418')
i8 = block3.emit(Operation, '@add_i_i_must_fit', [i7, MachineIntConstant(1)], MachineInt(), '`4 166:45-166:50', 'zz417')
i9 = block3.emit(Operation, '@gteq', [i8, MachineIntConstant(52)], Bool(), '`2 336:5-336:11', 'zz40')
block3.next = ConditionalGoto(i9, block4, block6, '`2 336:2-341:3')
i10 = block4.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0xfffffffffffff, SmallFixedBitVector(52)), MachineIntConstant(52), mi], SmallFixedBitVector(52), '`2 337:4-337:35', 'return')
block4.next = Goto(block5, None)
i11 = block5.emit_phi([block6, block4], [None, i10], SmallFixedBitVector(52))
i12 = block5.emit(Operation, '@and_vec_bv_bv', [zaddress, i11], SmallFixedBitVector(52), '`4 166:27-166:51', 'zz414')
i13 = block5.emit(Operation, '@shiftr_bv_i', [i12, MachineIntConstant(52), mi], SmallFixedBitVector(52), '`4 166:11-166:55', 'zz40')
i14 = block5.emit(Operation, '@add_i_i_must_fit', [i5, MachineIntConstant(1)], MachineInt(), '`4 167:46-167:53', 'zz411')
i15 = block5.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0x1, SmallFixedBitVector(64)), MachineIntConstant(64), i14], SmallFixedBitVector(64), '`2 340:28-340:50', 'zz44')
i16 = block5.emit(Operation, '@sub_bits_bv_bv', [i15, SmallBitVectorConstant(0x1, SmallFixedBitVector(64)), MachineIntConstant(64)], SmallFixedBitVector(64), '`2 340:19-340:56', 'zz43')
i17 = block5.emit(Operation, '@and_vec_bv_bv', [zia, i16], SmallFixedBitVector(64), '`4 167:27-167:54', 'zz48')
i18 = block5.emit(Operation, '@shiftl_bv_i', [i13, MachineIntConstant(52), i14], SmallFixedBitVector(52), '`4 168:2-168:43', 'zz42')
i19 = block5.emit(Operation, '@truncate_bv_i', [i17, MachineIntConstant(52)], SmallFixedBitVector(52), '`4 80:17-80:31', 'return')
i20 = block5.emit(Operation, '@or_vec_bv_bv', [i18, i19], SmallFixedBitVector(52), '`4 168:2-168:58', 'return')
block5.next = Return(i20, None)
i21 = block6.emit(Operation, '@shiftl_bv_i', [SmallBitVectorConstant(0x1, SmallFixedBitVector(52)), MachineIntConstant(52), i8], SmallFixedBitVector(52), '`2 340:28-340:50', 'zz44')
i22 = block6.emit(Operation, '@sub_bits_bv_bv', [i21, SmallBitVectorConstant(0x1, SmallFixedBitVector(52)), MachineIntConstant(52)], SmallFixedBitVector(52), '`2 340:19-340:56', 'zz43')
i23 = block6.emit(Operation, '@shiftl_bv_i', [i22, MachineIntConstant(52), mi], SmallFixedBitVector(52), '`2 340:4-340:60', 'return')
i11.prevvalues[0] = i23
block6.next = Goto(block5, None)
block7.next = Raise(StringConstant('src/v8_base.sail:9344.39-9344.40'), None)
block8.next = Raise(StringConstant('src/v8_base.sail:9343.53-9343.54'), None)
graph = Graph('zStageOA', [zia, zaddress, mi], block0)
""")

